---
version: 2.1

orbs:
  terraform: feedyard/terraform@dev:latest

workflows:
  version: 2

  # Create S3 bucket in 'profile' account for use as bootstrap and DR key/value store (pre-Consul)
  bootstrap-aws-key-value-store:
    jobs:
      - approve-provision-key-value-store:
          type: approval
      - terraform/aws:
          name: plan-key-value-store
          plan-step: true
          env: profile
          aws-role: $AWS_ROLE_PROFILE
          aws-region: us-east-1
          encoded-file: environment.bin
          use-provider-role: true
          terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
          context: infra-pipeline
          working-directory: key-value-store
          requires:
            - approve-provision-key-value-store
      - approve-plan-key-value-store:
          type: approval
          requires:
            - plan-key-value-store
      - terraform/aws:
          name: apply-key-value-store
          apply-step: true
          env: profile
          aws-role: $AWS_ROLE_PROFILE
          aws-region: us-east-1
          encoded-file: environment.bin
          use-provider-role: true
          terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
          context: infra-pipeline
          working-directory: key-value-store
          after-terraform:
            - run:
                name: awspec test key/value store configuration
                command: rspec exec spec/key_value_store_spec.rb
          requires:
            - approve-plan-key-value-store

  # Create S3 bucket in Production account for use as di-platform product team's Terraform remote state store
  # (when you are unable to use terraform cloud)
  bootstrap-aws-secure-state-storage:
    jobs:
      - approve-provision-secure-state-storage:
          type: approval
      - terraform/aws:
          name: plan-secure-state-storage
          plan-step: true
          env: bootstrap
          aws-role: $AWS_ROLE_SANDBOX
          aws-region: us-east-1
          encoded-file: environment.bin
          use-provider-role: true
          terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
          context: infra-pipeline
          working-directory: secure-state-storage
          requires:
            - approve-provision-secure-state-storage
      - approve-secure-state-storage-plan:
          type: approval
          requires:
            - plan-secure-state-storage
#      - terraform/aws:
#          name: apply-secure-state-storage

  # Create EKS cluster in a sandbox account to use as compute to bootstrap a self-managed pipeline tool
  # (when you are unable to use a SaaS tool)
  bootstrap-aws-pipeline-cluster:
    jobs:
      - approve-provision-pipeline-cluster:
          type: approval
#      - terraform/aws:
#          name: pipeline-cluster-plan
#      - approve-pipeline-cluster-plan:
#          type: approval
#          requires:
#            - pipeline-cluster-plan
#      - terraform/aws:
#          name: apply-pipeline-cluster