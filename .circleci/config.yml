---
version: 2.1

executors:

  bootstrap-cluster:
    working_directory: ~/aws-bootstrap
    docker:
    - image: quay.io/feedyard/circleci-infra-agent
    environment:
      BASH_ENV: local.env

commands:

  setup-job:
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: confirm Docker engine running
        command: docker info
    - run:
        name: decrypt secrets
        command: invoke dec

  setup-backend:
    parameters:
      account:
        description: 'short name used to identify aws account. e.g., sandbox, prod'
        type: string
    steps:
    - run:
        name: put parameter to stdout
        command: echo << parameters.account >>

# 1 = aws access key id for the pipeline service account identity (required)
# 2 = aws secret access key for the pipeline service account identity (required)
# 3 = aws region (required)
# 4 = aws role to assume (optional)

jobs:

  terraform-plan:
    executor: bootstrap-cluster
    parameters:
      account:
        description: 'short name used to identify aws account. e.g., sandbox, prod'
        type: string
    steps:
      - setup-job
      - setup-backend:
          account: << parameters.account >>

workflows:
  aws-bootstrap-pipeline:
    jobs:
      - terraform-plan:
          account: 'first run account parameter'
      - terraform-plan:
          account: 'second run account parameter'




#version: 2
#
#defaults: &defaults
#  working_directory: ~/aws-bootstrap/bootstrap-cluster
#  environment:
#    PRODUCT: feedyard
#    BASH_ENV: local.env
#  docker:
#  - image: quay.io/feedyard/circleci-infra-agent
#
#jobs:
#
#  plan_bootstrap-sandbox:
#    <<: *defaults
#    steps:
#    - checkout
#    - setup_remote_docker
#    - run:
#        name: confirm Docker engine running
#        command: docker info
#    - run:
#        name: decrypt secrets
#        command: invoke dec
#    - run:
#        name: setup terraform remote state backend configuration file
#        working_directory: ~/aws-bootstrap/bootstrap-cluster
#        environment:
#          ACCOUNT: sandbox
#          AWS_REGION: us-east-1
#        command: >
#          bash setup_backend.sh
#            PRODUCT
#            $ACCOUNT
#            $AWS_REGION
#    - run:
#        name: setup aws credentials
#        environment:
#          AWS_REGION: us-east-1
#        command: >
#          bash setup_credentials.sh
#            $FEEDYARD_SANDBOX_ACCESS_KEY_ID
#            $FEEDYARD_SANDBOX_SECRET_ACCESS_KEY
#            $AWS_REGION
#    - run:
#        name: initialize the terraform state backend
#        working_directory: ~/aws-bootstrap/bootstrap-cluster
#        command: invoke init
#    - run:
#        name: generate terraform plan
#        working_directory: ~/aws-bootstrap/bootstrap-cluster
#        environment:
#          ACCOUNT: sandbox
#        command: invoke plan $ACCOUNT
#
#  apply_bootstrap_sandbox:
#    <<: *defaults
#    steps:
#    - checkout
#    - setup_remote_docker
#    - run:
#        name: confirm Docker
#        command: docker info
#    - run:
#        name: decrypt secrets
#        command: invoke dec
#    - run:
#        name: setup aws credentials
#        environment:
#          AWS_REGION: us-east-1
#        command: >
#          bash setup_credentials.sh
#          $FEEDYARD_PROFILE_ACCESS_KEY_ID
#          $FEEDYARD_PROFILE_SECRET_ACCESS_KEY
#          $AWS_REGION
#    - run:
#        name: setup terraform state file location
#        working_directory: ~/aws-bootstrap/secure-state-storage
#        environment:
#          AWS_REGION: us-east-1
#          ACCOUNT: prod
#        command: >
#          bash setup_backend.sh
#          $ORGANIZATION
#          $ACCOUNT
#          $AWS_REGION
#    - run:
#        name: initialize the terraform state backend
#        working_directory: ~/aws-bootstrap/secure-state-storage
#        command: invoke init
#    - run:
#        name: apply terraform plan
#        working_directory: ~/aws-bootstrap/secure-state-storage
#        environment:
#          ACCOUNT: prod
#        command: invoke apply $ACCOUNT
#    - run:
#        name: test terraform state
#        environment:
#          AWS_REGION: us-east-1
#          ACCOUNT: prod
#        command: invoke test $ACCOUNT
#
#
#workflows:
#  version: 2
#  di-baseline-platform-aws-resources-pipeline:
#    jobs:
#    - plan_preview
#    - approve-preview-plan:
#        type: approval
#        requires:
#        - plan_preview
#    - apply_preview:
#        requires:
#        - approve-preview-plan
#    - plan_nonprod:
#        requires:
#        - apply_preview
#    - approve-nonprod-plan:
#        type: approval
#        requires:
#        - plan_nonprod
#    - apply_nonprod:
#        requires:
#        - approve-nonprod-plan